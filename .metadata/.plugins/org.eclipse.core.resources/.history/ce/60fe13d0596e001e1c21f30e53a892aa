package date_231019;

public class ArrayUtility2 {
	static int[] concat(int[] s1, int[] s2) {
		// s1과 s2를 연결한 새로운 배열 리턴
		int[] iArr = new int[s1.length + s2.length];

		for (int i = 0; i < iArr.length; i++) {
			if (i < s1.length) {
				iArr[i] = s1[i];
			} else {
				iArr[i] = s2[i - s1.length];
			}
		}

		return iArr;
	}

	// s1에서 s2배열의 숫자를 모두 삭제한 새로운 배열 리턴
	static int[] remove(int[] s1, int[] s2) {
		int[] iArr = new int[s1.length - s2.length];

		for (int i = 0; i < s1.length; i++) {
			for (int j = 0; j < s2.length; j++) {
				if (s1[i] == s2[j]) {
					iArr[i] = s1[i];
					break;
				}
			}
		}
		return iArr;
	}

	public static void main(String[] args) {
		int[] s1 = { 1, 2, 3, 4, 5 };
		int[] s2 = { 1, 2, 3 };

		int[] result1 = intToDouble(iArray);
		System.out.println("int 배열 double 배열로 변환");
		for (int i = 0; i < result1.length; i++) {
			System.out.println("int[" + i + "] -> " + iArray[i] + " double[" + i + "] " + result1[i]);
		}
		System.out.println();
		int[] result2 = doubleToInt(dArray);
		System.out.println("double 배열 int 배열로 변환");
		for (int i = 0; i < result1.length; i++) {
			System.out.println("double[" + i + "] -> " + dArray[i] + " int[" + i + "] " + result2[i]);
		}
	}

}
